@using EmployeeManagement.Core.Models
@using System.Linq.Expressions

<div class="modal" tabindex="-1" style="display:block">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@(Employee.Id == 0 ? "Add" : "Edit") Employee</h5>
                <button type="button" class="btn-close" @onclick="OnCancel"></button>
            </div>
            <div class="modal-body">
                <EditForm Model="@Employee" OnValidSubmit="OnValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <InputField Id="firstName" Label="First Name" For="@(() => Employee.FirstName)">
                        <InputText id="firstName" @bind-Value="Employee.FirstName" class="form-control" />
                    </InputField>

                    <InputField Id="lastName" Label="Last Name" For="@(() => Employee.LastName)">
                        <InputText id="lastName" @bind-Value="Employee.LastName" class="form-control" />
                    </InputField>

                    <InputField Id="email" Label="Email" For="@(() => Employee.Email)">
                        <InputText id="email" @bind-Value="Employee.Email" class="form-control" />
                    </InputField>

                    <InputField Id="department" Label="Department" For="@(() => Employee.Department)">
                        <InputText id="department" @bind-Value="Employee.Department" class="form-control" />
                    </InputField>

                    <InputField Id="salary" Label="Salary" For="@(() => Employee.Salary)">
                        <InputNumber id="salary" @bind-Value="Employee.Salary" class="form-control" />
                    </InputField>

                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Save</button>
                        <button type="button" class="btn btn-secondary" @onclick="OnCancel">Cancel</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public EmployeeDto Employee { get; set; } = new();

    [Parameter]
    public EventCallback OnCancel { get; set; }

    [Parameter]
    public EventCallback<EmployeeDto> OnSave { get; set; }

    private async Task OnValidSubmit()
    {
        await OnSave.InvokeAsync(Employee);
    }
}